== Installation ==

Prerequisities: 

  # Matlab (tm) by Mathworks Inc., R2006a (R13+) [www.mathworks.com]
  # kdtree library by Steven Michael, MIT, from Matlab Central (included in the package for the sake of convenience) [[http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=7030&objectType=FILE]]
  # Subversion client (recommended: Tortoise SVN [http://tortoisesvn.tigris.org/]) for the version control

== Downloads == 

Download the package, using the Subversion client

for example, with Tortoise SVN on Windows XP:
  * open a new directory, e.g. C:\Matlab\hotwire
  * with Right-mouse select SVN Checkout: 
  in the first line enter: {{{http://hotwirelut.googlecode.com/svn/trunk/}}} and press OK


= First run =

  * Run Matlab
  * Get into the directory, C:\Matlab\hotwire. 
  * Edit *{{{runLUT.m}}}* - modify directories of reading/writing files:
{{{
% runLUT.m
% runs LUT model script

addpath kdtree

clear all

% set no. 1
calibFile = 'E:\Fld_Res\Calib\BCLBL021.FLD';
lutFile = 'E:\Fld_Res\Calib\BCLBL021.MAT';
datFile = 'E:\Fldat\FLDTL021.FLD';
resFile = 'E:\Velfld\VELLUTL021.FLD';

typical_run

% set no 2 - processed on 14.08.07, see in E
clear all

calibFile   = 'E:\Fld_Res\Calib\BCLBL117.FLD';
lutFile      = 'E:\Fld_Res\Calib\BCLBL117.MAT';
datFile     = 'E:\Fldat\Fldtl117.fld';
resFile     = 'E:\Velfld\VELLUTL117.FLD';

typical_run


% set no 2 - processed on 14.08.07, see in E

clear all

% set no. 1
calibFile = 'E:\Fld_Res\Calib\ACLBL021.FLD';
lutFile = 'E:\Fld_Res\Calib\ACLBL021.MAT';
datFile = 'E:\Fldat\FLDTL021.FLD';
resFile = 'E:\Velfld\VELLUTL021_A.FLD';

typical_run
}}}

  * Edit *{{{typical_run.m}}}* to modify options:
{{{
% Options
opt = struct;

% General values:
opt.numArrays = 5; % number of arrays in the probe
opt.numWires  = 4; % number of wires per array

% Calibration options

opt.lenCalibFile = 490; % number of calibration points
opt.testMode = 1; % use 1 if the self-test is needed, with the same data as calibrated
opt.tosave = 1; % use 1 first time the lutFile is generated or need to be regenerated

opt.numelVel = 100;    % 50 different velocity interpolations
opt.dy = 1; opt.dz = 1; % in degrees, smallest resolved angle in LUT, smaller value means longer run and memory consumption
opt.du = .5; % m/s: 9 - 15 m/s = 6/.3 is about 20 different levels
opt.dy2 = .1; opt.dz2 = .1; % in degrees, smallest resolved angle in LUT, smaller value means longer run and memory consumption
opt.du2 = .1; % m/s: 9 - 15 m/s = 6/.3 is about 20 different levels



% RAW data reading options:
opt.skipLength =  0;
opt.readLength = 200; % 490*8 values

% Writing results options
opt.write = 0; % if you do not want to write the following resFile, = zero

lut_calibration(calibFile,datFile,resFile,lutFile,opt)


return
%%%%%%%%%%%%%%% Stop here if TEST %%%%%%%%%%%%%%%%%

% if it was successful run:
opt.tosave = 1;
opt.testMode = 1;
lut_calibration(calibFile,datFile,resFile,lutFile,opt)

% and if this one worked out, then the full run
opt.write = 1;
opt.testMode = 0;
opt.tosave = 0;
opt.readLength = 2^16;
lut_calibration(calibFile,datFile,resFile,lutFile,opt)
}}}